parameters:

- name: useMicrosoftBuildAssetsForTests
  type: boolean

- name: legs
  type: object

# True when build is running from dotnet/dotnet directly
- name: isBuiltFromVmr
  type: boolean
  default: true

- name: centOSStreamContainerName
  type: boolean
  default: centOSStreamContainer

- name: centOSStreamContainerImage
  type: boolean
  default: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream-10-amd64

stages:
- stage: VMR_SourceOnly_Build
  displayName: VMR Source-Only Build
  jobs:
  - ${{ each leg in parameters.legs }}:
    - template: ../jobs/vmr-build.yml
      parameters:
        # CentOS
        ${{ if eq(leg.distro, 'centos') }}:
          buildName: ${{ format(leg.buildNameFormat, parameters.centOSStreamName) }}
          container:
            name: ${{ parameters.centOSStreamContainerName }}
            image: ${{ parameters.centOSStreamContainerImage }}
          ${{ if ne(leg.reuseBuildArtifactsFrom, '') }}:
            reuseBuildArtifactsFrom:
            - ${{ format(leg.reuseBuildArtifactsFrom, variables.centOSStreamName) }}
          ${{ if and(contains(leg.buildNameFormat, 'Previous'), eq(leg.targetArchitecture, 'x64')) }}:
            artifactsRid: ${{ variables.centOSStreamX64Rid }}
        
        targetArchitecture: ${{ leg.targetArchitecture }}
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        buildSourceOnly: true
        ${{ if eq(parameters.useMicrosoftBuildAssetsForTests, true) }}:
          runTests: false
        enablePoison: ${{ leg.enablePoison }}
        buildFromArchive: ${{ leg.buildFromArchive }}
        runOnline: ${{ leg.runOnline }}
        useMonoRuntime: ${{ leg.useMonoRuntime }}
        withPreviousSDK: ${{ leg.withPreviousSDK }}
