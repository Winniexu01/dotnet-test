jobs:
- job: BuildJob
  pool:
    vmImage: 'ubuntu-latest'
  steps:

  - script: |
      set -x

      alias=$(Resources.TriggeringAlias)
      alias=$(echo $alias | sed 's/\./_/g' | tr '[:lower:]' '[:upper:]')

      dotnet_dotnet_build='${{ replace(parameters.dotnetDotnetRunId, ' ', '') }}'
      dotnet_dotnet_sha=''
      if [[ -z "$dotnet_dotnet_build" ]]; then
        if [[ -z "$alias" ]]; then
          dotnet_dotnet_build=$(az pipelines runs list --branch '$(Build.SourceBranch)' --organization 'https://dev.azure.com/v-wexu0720' --project 'Test' --pipeline-ids '1' --status completed --top 1 --query "[].id" --output tsv)
        else
          runID=RESOURCES_PIPELINE_${alias}_RUNID
          dotnet_dotnet_build=$(printenv "$runID")
        fi
      fi
      id=$(az pipelines runs list --branch '$(Build.SourceBranch)' --organization 'https://dev.azure.com/v-wexu0720' --project 'Test' --pipeline-ids '1' --status completed --top 1 --query "[].id" --output tsv)
      echo "Latest id: $id"

      if [[ -z "$dotnet_dotnet_build" ]]; then
        echo "Could not find a completed dotnet-dotnet build for branch '$(Build.SourceBranch)'"
        exit 1
      fi

      if [[ -z "$dotnet_dotnet_sha" ]]; then
        if [[ -z "$alias" ]]; then
          dotnet_dotnet_sha=$(az pipelines build show --organization 'https://dev.azure.com/v-wexu0720' --project 'Test' --id "$dotnet_dotnet_build" --query "sourceVersion" --output tsv)
        else
          sourceCommit=RESOURCES_PIPELINE_${alias}_SOURCECOMMIT
          dotnet_dotnet_sha=$(printenv "$sourceCommit")
        fi
      fi

      if [[ -z "$dotnet_dotnet_sha" ]]; then
        echo "Could not find a completed dotnet-dotnet build for branch '$(Build.SourceBranch)'"
        exit 1
      fi
      
      echo "Dotnet-dotnet build: https://dev.azure.com/v-wexu0720/Test/_build/results?buildId=$dotnet_dotnet_build&view=results"

      echo "##vso[build.addbuildtag]dotnet $dotnet_dotnet_sha"
      echo "##vso[task.setvariable variable=DotnetDotnetBuildId]$dotnet_dotnet_build"

      echo $dotnet_dotnet_sha AND $dotnet_dotnet_build

    displayName: Find associated build
    name: Get_Build_Id
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)