# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  pipelines:
  - pipeline: Example
    source: Example
    # For releases branches only run on internal/release branches because that's where dependencies flow.
    # Previews don't have internal/release branches so they must be run from non-internal release branches.
    trigger:
      branches:
        include:
        - test

  - pipeline: EEEEEEEEEEEE
    source: EEEEEEEEEEEE
    # For releases branches only run on internal/release branches because that's where dependencies flow.
    # Previews don't have internal/release branches so they must be run from non-internal release branches.
    trigger:
      branches:
        include:
        - test

pr: none
trigger: none

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: BuildJob
    displayName: Build Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - script: |
        echo "projectID: $(resources.pipeline.Example.projectID)"
        echo "pipelineID: $(resources.pipeline.Example.pipelineID)"
        echo "runID: $(resources.pipeline.Example.runID)"
        echo "runURI: $(resources.pipeline.Example.runURI)"
        echo "sourceBranch: $(resources.pipeline.Example.sourceBranch)"
        echo "sourceCommit: $(resources.pipeline.Example.sourceCommit)"

        echo "projectID: $(resources.pipeline.EEEEEEEEEEEE.projectID)"
        echo "pipelineID: $(resources.pipeline.EEEEEEEEEEEE.pipelineID)"
        echo "runID: $(resources.pipeline.EEEEEEEEEEEE.runID)"
        echo "runURI: $(resources.pipeline.EEEEEEEEEEEE.runURI)"
        echo "sourceBranch: $(resources.pipeline.EEEEEEEEEEEE.sourceBranch)"
        echo "sourceCommit: $(resources.pipeline.EEEEEEEEEEEE.sourceCommit)"

        echo "$(Build.SourceBranch)"

        if [[ -z "$dotnet_dotnet_build" ]]; then
          dotnet_dotnet_build=$(az pipelines runs list --branch '$(Build.SourceBranch)' --organization 'https://dev.azure.com/v-wexu0720' --project 'Test' --pipeline-ids '1' --status completed --top 1 --query "[].id" --output tsv)
        fi

        if [[ -z "$dotnet_dotnet_build" ]]; then
          echo "Could not find a completed dotnet-dotnet build for branch '$(Build.SourceBranch)'"
          exit 1
        fi

        if [[ -z "$dotnet_dotnet_sha" ]]; then
          dotnet_dotnet_sha=$(az pipelines build show --organization 'https://dev.azure.com/v-wexu0720' --project 'Test' --id "$dotnet_dotnet_build" --query "sourceVersion" --output tsv)
        fi

        if [[ -z "$dotnet_dotnet_sha" ]]; then
          echo "Could not find a completed dotnet-dotnet build for branch '$(Build.SourceBranch)'"
          exit 1
        fi

        echo "Test build: https://dev.azure.com/dnceng/internal/_build/results?buildId=$dotnet_dotnet_build&view=results"

        echo "##vso[build.addbuildtag]dotnet $dotnet_dotnet_sha"
        echo "##vso[task.setvariable variable=DotnetDotnetBuildId]$dotnet_dotnet_build"
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: Find associated build
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
