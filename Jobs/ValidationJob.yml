parameters:

- name: job
  type: job

- name: internalConfig
  type: object

- name: sdl
  type: object

- name: pool
  type: object

- name: featureFlags
  type: object

- name: settings
  type: object

- name: supportedOutputs
  type: object
  default:
  - pipelineArtifact

- name: isOfficial
  type: boolean

- name: predefinedOneESPTVariables
  type: object

- name: deploymentJobUsedInNonReleaseWorkflow
  type: boolean

jobs:
- ${{ each pair in parameters.job }}:
    ${{ if notIn(pair.key, 'arguments', 'steps', 'templateContext', 'variables') }}:
      ${{ pair.key }}: ${{ pair.value }}
  variables:
  - ${{ if parameters.job.variables }}:
    - ${{ each pair2 in parameters.job.variables }}:
      - ${{ if ne(pair2.key, '') }}:
        - name: ${{ pair2.key }}
          value: ${{ pair2.value }}
      - ${{ else }}:
        - ${{ insert }}: ${{ pair2 }}
  - ${{ parameters.predefinedOneESPTVariables }}
  ${{ if parameters.job.templateContext.outputs }}:
    ${{ each output in parameters.job.templateContext.outputs }}:
      ${{ if not(containsValue(parameters.supportedOutputs, output.output)) }}:
        "${{ output.output }} is not permitted in a validation job.": error
  ${{ if eq(parameters.sdl.postValidationJobAnalysisPool.os, 'macOS') }}:
    "${{ parameters.sdl.postValidationJobAnalysisPool.os }} is not a permitted os for Post Validation Pool": error

  steps:
  - template: ../Steps/DisallowReleaseSteps.yml
    parameters:
      job: ${{ parameters.job }}
      internalConfig: ${{ parameters.internalConfig }}
  - template: ../Steps/UserProvidedValidationSteps.yml
    parameters:
      steps: ${{ parameters.job.steps }}
      internalConfig: ${{ parameters.internalConfig }}
      pool: ${{ parameters.pool }}
      isOfficial: ${{ parameters.isOfficial }}
      sdl: ${{ parameters.sdl }}
      featureFlags: ${{ parameters.featureFlags }}
      settings: ${{ parameters.settings }}

  # if pipeline artifact publish
  - ${{ if parameters.job.templateContext.outputs }}:
    - ${{ each output in parameters.job.templateContext.outputs }}:
      - ${{ if containsValue(parameters.supportedOutputs, output.output) }}:
        - template: ../Steps/Outputs.yml
          parameters:
            outputs:
            - output: ${{ output.output }}
              artifactName: ${{ output.artifactName }}
              targetPath: ${{ coalesce(output.targetPath, output.path) }}
              sbomEnabled: false
              condition: ${{ coalesce(output.condition, output.mainCondition) }}
            sdl: ${{ parameters.sdl }}
            target: host
            pool: ${{ parameters.pool }}
            isOfficial: ${{ parameters.isOfficial }}
            featureFlags: ${{ parameters.featureFlags }}
            settings: ${{ parameters.settings }}
            skipSDL: true
            steps: ${{ parameters.job.steps }}
            internalConfig: ${{ parameters.internalConfig }}

- ${{ if parameters.job.templateContext.outputs }}:
  - ${{ each output in parameters.job.templateContext.outputs }}:
    - ${{ if containsValue(parameters.supportedOutputs, output.output) }}:
      - template: PostValidationJob.yml
        parameters:
          job: ${{ parameters.job }}
          internalConfig: ${{ parameters.internalConfig }}
          sdl: ${{ parameters.sdl }}
          pool: ${{ parameters.pool.pipelinePool }}
          featureFlags: ${{ parameters.featureFlags }}
          settings: ${{ parameters.settings }}
          isOfficial: ${{ parameters.isOfficial }}
          scanDirectory: ${{ coalesce(output.targetPath, output.path) }}
          artifactName: ${{ output.artifactName }}
          postValidationJobArtifactName: ${{ output.postValidationJobArtifactName }}
          sourceRepositoryToCheckout: ${{ output.postValidationJobSourceRepositoryToCheckout }}
          condition: ${{ coalesce(output.condition, output.mainCondition) }}
          deploymentJobUsedInNonReleaseWorkflow: ${{ parameters.deploymentJobUsedInNonReleaseWorkflow }}

- ${{ each step in parameters.job.steps }}:
  - ${{ if eq(step.task, '1ES.PublishPipelineArtifact@1') }}:
    - template: PostValidationJob.yml
      parameters:
        job: ${{ parameters.job }}
        internalConfig: ${{ parameters.internalConfig }}
        sdl: ${{ parameters.sdl }}
        pool: ${{ parameters.pool.pipelinePool }}
        featureFlags: ${{ parameters.featureFlags }}
        settings: ${{ parameters.settings }}
        isOfficial: ${{ parameters.isOfficial }}
        scanDirectory: ${{ step.inputs.targetPath }}
        artifactName: ${{ step.inputs.artifactName }}
        postValidationJobArtifactName: ${{ step.inputs.postValidationJobArtifactName }}
        sourceRepositoryToCheckout: ${{ step.inputs.postValidationJobSourceRepositoryToCheckout }}
        condition: ${{ coalesce(step.task.condition, step.task.mainCondition, 'succeededOrFailed()') }}
        deploymentJobUsedInNonReleaseWorkflow: ${{ parameters.deploymentJobUsedInNonReleaseWorkflow }}
