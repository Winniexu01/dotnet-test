parameters:

- name: name
  type: string

- name: displayName
  type: string

- name: approval
  type: string

- name: environment
  type: string

- name: adoEnvironment
  type: string

- name: ev2
  type: object

- name: ev2ArtifactDestination
  type: string

- name: scopeBindingOverrides
  type: object
  default:

- name: predefinedOneESPTVariables
  type: object

- name: continueOnError
  type: string

- name: isOfficial
  type: boolean

- name: sdl
  type: object

- name: featureFlags
  type: object
  default: {}

jobs:
- ${{ if parameters.adoEnvironment }}:
  - deployment: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}

    # If the ev2 timeout is specified, we apply it also to the job that submits the rollout. That doesn't
    # make much sense (because the submission should be fast), the reason why we do that is that if the user wants
    # to pass System.AccessToken to the Ev2 rollout, it's validity is limited to the job timeout.
    ${{ if parameters.ev2.timeoutInMinutes }}:
      timeoutInMinutes: ${{ parameters.ev2.timeoutInMinutes }}
    ${{ else }}:
      timeoutInMinutes: 10

    ${{ if eq(parameters.approval, 'ApprovalService') }}:
      dependsOn: approval
    environment: ${{ parameters.adoEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - template: ../Steps/Ev2Steps.yml
            parameters:
              ev2: ${{ parameters.ev2 }}
              approval: ${{ parameters.approval }}
              environment: ${{ parameters.environment }}
              scopeBindingOverrides: ${{ parameters.scopeBindingOverrides }}
              ev2ArtifactDestination: ${{ parameters.ev2ArtifactDestination }}
              isOfficial: ${{ parameters.isOfficial  }}
              sdl: ${{ parameters.sdl }}
              featureFlags: ${{ parameters.featureFlags }}
- ${{ else }}:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: 10
    ${{ if eq(parameters.approval, 'ApprovalService') }}:
      dependsOn: approval
    variables:
    - ${{ parameters.predefinedOneESPTVariables }}
    steps:
    - template: ../Steps/Ev2Steps.yml
      parameters:
        ev2: ${{ parameters.ev2 }}
        approval: ${{ parameters.approval }}
        environment: ${{ parameters.environment }}
        scopeBindingOverrides: ${{ parameters.scopeBindingOverrides }}
        ev2ArtifactDestination: ${{ parameters.ev2ArtifactDestination }}
        isOfficial: ${{ parameters.isOfficial }}
        sdl: ${{ parameters.sdl }}
        featureFlags: ${{ parameters.featureFlags }}

# This agent-less job waits for the release to finish
- job: ${{ parameters.name }}_wait
  variables:
  - ${{ parameters.predefinedOneESPTVariables }}
  displayName: ${{ parameters.displayName }} (Wait)
  pool: server
  dependsOn: ${{ parameters.name }}
  ${{ if parameters.ev2.timeoutInMinutes }}:
    timeoutInMinutes: ${{ parameters.ev2.timeoutInMinutes }}
  steps:
  - task: Ev2Agentless@1
    ${{ if ne(parameters.ev2.retryCountOnMonitoringTaskFailure, '') }}:
      retryCountOnTaskFailure: ${{ parameters.ev2.retryCountOnMonitoringTaskFailure }}
    displayName: Ev2 - Monitoring
    ${{ if eq(parameters.continueOnError, 'true') }}:
      continueOnError: true
    inputs:
      ${{ if eq(parameters.ev2.rolloutInfra, 'Test') }}:
        Ev2MonintoringUrl: 'https://test.azureservicedeploy.msft.net/api/monitorrollout'
      ${{ elseif eq(parameters.ev2.rolloutInfra, 'Fairfax') }}:
        Ev2MonintoringUrl: 'https://prod.azureservicedeploy.usgovcloudapi.net/api/monitorrollout'
      ${{ elseif eq(parameters.ev2.rolloutInfra, 'Mooncake') }}:
        Ev2MonintoringUrl: 'https://prod.azureservicedeploy.chinacloudapi.cn/api/monitorrollout'
      ${{ else }}:
        Ev2MonintoringUrl: 'https://azureservicedeploy.msft.net/api/monitorrollout'
